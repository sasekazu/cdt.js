function cdt(b,e,d){void 0==d&&(d={triSize:0,numSmoothing:0});var a=cdt.generateInputData(b,e,d);b=a.culledBoundaryPoints;e=a.culledHoleBoundaryPoints;var g=a.points,f=a.constraint;if(3>g.length)return null;cdt.addSuperTriangleToPoints(g);for(var c=a=new cdt.DelaunayTriangle(g,[g.length-3,g.length-2,g.length-1]),h=0;h<g.length-3;++h)c=cdt.DelaunayTriangle.lawsonTriangleDetection(g,c,g[h]),null!=c&&c.addPoint(h,g,f);for(c=0;!d.softConstraint;){if(c>2*g.length){console.log("max iteration at cdt()");
break}var k=cdt.getCrossTriConstraint(g,a,f),h=k.crossEdge,l=k.crossTri,k=cdt.extractVerticesFromTri(l),k=cdt.getUpperAndLowerVtx(g,h,k),m=cdt.removeCrossTriAndExtractOuterEdge(l,a),a=m.head;if(null!=h)l=cdt.addInnerVetices(g,h,k.upperVtx,m.adjTris,a),h=cdt.addInnerVetices(g,h,k.lowerVtx,m.adjTris,a),cdt.updateLocalAdjacentsLU(l,h);else break;++c}a=cdt.removeSuperTriangle(a,g);a=cdt.removeOuterTriangles(a,g,b,e,f);cdt.smoothing(a,g,f,d.numSmoothing);b=[];for(e=a;null!=e;e=e.next)b.push(e.vertexID);
return{points:g,connectivity:b}}cdt.smoothing=function(b,e,d,a){if(!(0>=a))for(a=void 0==a?10:a,b=cdt.dataForSmoothing(b,e,d),d=0;d<a;++d)cdt.laplacianSmoothing(e,b)};cdt.dataForSmoothing=function(b,e,d){for(var a=Array(e.length),g=0;g<a.length;++g)a[g]=!1;for(g=0;g<d.length;++g)for(var f=0;f<d[g].length;++f)a[d[g][f]]=!0;d=Array(e.length);for(g=0;g<e.length;++g)d[g]=[];for(;null!=b;b=b.next)d[b.vertexID[0]].push(b),d[b.vertexID[1]].push(b),d[b.vertexID[2]].push(b);return{isOnBoundary:a,posToTri:d}};
cdt.laplacianSmoothing=function(b,e){for(var d=e.isOnBoundary,a=e.posToTri,g=cdt.clone(b),f=0;f<b.length;++f)if(!d[f]){for(var c=[],h=0;h<a[f].length;++h)c.push(a[f][h].vertexID[0]),c.push(a[f][h].vertexID[1]),c.push(a[f][h].vertexID[2]);for(var c=c.filter(function(a,b,c){return c.indexOf(a)===b}),c=c.filter(function(a){return a!==f}),k=[0,0],h=0;h<c.length;++h)k=cdt.add(k,b[c[h]]);g[f]=cdt.div(k,c.length)}for(f=0;f<b.length;++f)b[f]=cdt.clone(g[f])};
cdt.generateInputData=function(b,e,d){function a(a,b){for(var c=[],d,e=0;e<a.length;++e){for(var f=[a[e][0]],g=1;g<a[e].length;++g)d=f[f.length-1],d=cdt.sub(d,a[e][g]),cdt.norm2(d)>b&&f.push(a[e][g]);c.push(f)}return c}function g(a){for(var b=[],c=0;c<a.length;++c)3<=a[c].length?b.push(a[c]):console.log("deleted");return b}var f=d.triSize,c=d.cutoffLength;d=d.merge;void 0==c&&(c=0);b=a(b,c);e=a(e,c);b=g(b);e=g(e);for(var h=0,c=0;c<b.length;++c)h+=b[c].length;for(c=0;c<e.length;++c)h+=e[c].length;
for(var k=Array(h),c=h=0;c<b.length;++c)for(var l=0;l<b[c].length;++l)k[h]=cdt.clone(b[c][l]),++h;for(c=0;c<e.length;++c)for(l=0;l<e[c].length;++l)k[h]=cdt.clone(e[c][l]),++h;for(var h=Array(b.length+e.length),m=0,c=0;c<b.length;++c){h[c]=Array(b[c].length);for(l=0;l<h[c].length;++l)h[c][l]=m,++m;h[c].push(h[c][0])}for(var n=b.length,c=0;c<e.length;++c){h[c+n]=Array(e[c].length);for(l=0;l<h[c+n].length;++l)h[c+n][l]=m,++m;h[c+n].push(h[c+n][0])}if(void 0!=f&&0<f){if("auto"==f){for(c=m=f=0;c<b.length;++c)for(l=
0;l<b[c].length;++l)n=cdt.sub(b[c][(l+1)%b[c].length],b[c][l]),f+=cdt.norm2(n),++m;for(c=0;c<e.length;++c)for(l=0;l<e[c].length;++l)n=cdt.sub(e[c][(l+1)%e[c].length],e[c][l]),f+=cdt.norm2(n),++m;f=f/m*2}for(var m=[],p=k[0][0],n=k[0][0],l=k[0][1],q=k[0][1],c=0;c<k.length;++c)p<k[c][0]&&(p=k[c][0]),n>k[c][0]&&(n=k[c][0]),l<k[c][1]&&(l=k[c][1]),q>k[c][1]&&(q=k[c][1]);for(var p=(p-n)/f,t=(l-q)/f,r,c=0;c<p+1;++c)for(l=0;l<t+1;++l)r=[n+f*c,q+f*l],cdt.isPointInsideOfBoundaries(r,b,e)&&m.push(r);k=k.concat(m)}f=
[];m=[];if(d){for(c=0;c<k.length;++c){d=!1;for(l=0;l<c;++l)if(k[c][0]==k[l][0]&&k[c][1]==k[l][1]){d=!0;break}d?m.push({original:c,modified:l}):f.push(k[c])}d=Array(k.length);k=0;if(0<m.length){for(c=0;c<d.length;++c)k==m.length?d[c]=c-k:c==m[k].original?(d[c]=m[k].modified,++k):d[c]=c-k;for(c=0;c<h.length;++c)for(k=0;k<h[c].length;++k)h[c][k]=d[h[c][k]]}k=cdt.clone(f)}return{points:k,constraint:h,culledBoundaryPoints:b,culledHoleBoundaryPoints:e}};
cdt.removeCrossTriAndExtractOuterEdge=function(b,e){for(var d=[],a=0;a<b.length;++a)for(var g=0;3>g;++g)d.push(b[a].adjacent[g]);for(g=0;g<b.length;++g)e=b[g].remove(e);g=[];for(a=0;a<d.length;++a)null!=d[a]&&(d[a].isRemoved||g.push(d[a]));return{adjTris:g,head:e}};
cdt.addInnerVetices=function(b,e,d,a,g){var f=cdt.mul(.5,cdt.add(b[e[0]],b[e[1]]));d.sort(function(a,d){th1=Math.atan2(b[a][1]-f[1],b[a][0]-f[0]);th2=Math.atan2(b[d][1]-f[1],b[d][0]-f[0]);return th1-th2});e=cdt.innerTriangulation(b,d);null!=e&&(cdt.updateLocalAdjacents(e,a),a=cdt.getTail(g),a.next=e,e.prev=a);return e};
cdt.updateLocalAdjacentsLU=function(b,e){if(null==b||null==e)console.log("upperHead is null. upperHead:"+b+" lowerHead:"+e);else{for(var d=[],a=e;null!=a;a=a.next)d.push(a);cdt.updateLocalAdjacents(b,d)}};
cdt.updateLocalAdjacents=function(b,e){for(var d=b;null!=d;d=d.next)for(var a=0;3>a;++a)if(null==d.adjacent[a])for(var g=0;g<e.length;++g)for(var f=0;3>f;++f)d.vertexID[a]==e[g].vertexID[(f+1)%3]&&d.vertexID[(a+1)%3]==e[g].vertexID[f]&&(d.adjacent[a]=e[g],e[g].adjacent[f]=d,d.edgeIDinAdjacent[a]=f,e[g].edgeIDinAdjacent[f]=a)};cdt.getTail=function(b){for(;null!=b.next;)b=b.next;return b};
cdt.innerTriangulation=function(b,e){if(3==e.length)return new cdt.DelaunayTriangle(b,[e[0],e[1],e[2]]);for(var d=Array(e.length),a=0;a<d.length;++a)d[a]=cdt.clone(b[e[a]]);for(var g=Array(e.length),a=0;a<e.length;++a)g[a]=a;g=cdt.clone(g);g[0]!=g[g.length-1]&&g.push(g[0]);cdt.addSuperTriangleToPoints(d);for(var a=d.length,f=new cdt.DelaunayTriangle(d,[a-3,a-2,a-1]),c=f,a=0;a<d.length-3;++a)c=cdt.DelaunayTriangle.lawsonTriangleDetection(d,c,d[a]),c.addPoint(a,d,g);f=cdt.removeSuperTriangle(f,d);for(d=
f=cdt.removeOuterTrianglesForInnerTriangulation(f,g);null!=d;d=d.next)for(a=0;3>a;++a)d.vertexID[a]=e[d.vertexID[a]];return f};cdt.removeOuterTrianglesForInnerTriangulation=function(b,e){for(var d=Array(3),a=Array(3),g=b;null!=g;g=d){for(var d=[null,null,null],f=0;3>f;++f)for(var c=0;c<e.length-1;++c)if(g.vertexID[f]==e[c]){d[f]=e[c];break}for(f=0;3>f;++f)a[f]=d[(f+1)%3]-d[f];d=g.next;0<a[0]*a[1]*a[2]&&(b=g.remove(b))}return b};
cdt.removeOuterTriangles=function(b,e,d,a,g){function f(a,b){for(var c=[],d=0;3>d;++d){var e;if(e=null!=a.adjacent[d]){a:{e=a.vertexID[(d+1)%3];for(var f=0;f<b.length;++f)for(var g=0;g<b[f].length;++g)if(a.vertexID[d]==b[f][g]){var h=b[f].length;if(e==b[f][(g+1)%h]||e==b[f][(g+h-1)%h]){e=!0;break a}}e=!1}e=!e}e&&void 0==a.adjacent[d].isToBeRemoved&&c.push(a.adjacent[d])}return c}for(;;){for(var c=null,h=b;null!=h;h=h.next)if(void 0==h.isToBeRemoved){c=h;break}if(null==c)break;h=cdt.add(e[c.vertexID[0]],
e[c.vertexID[1]]);h=cdt.div(cdt.add(h,e[c.vertexID[2]]),3);c.isToBeRemoved=!cdt.isPointInsideOfBoundaries(h,d,a);for(var h=[],k=f(c,g),l=0;l<k.length;++l)h.push(k[l]),k[l].isToBeRemoved=c.isToBeRemoved;for(;0!=h.length;)for(k=h[h.length-1],h.splice(h.length-1,1),k=f(k,g),l=0;l<k.length;++l)h.push(k[l]),k[l].isToBeRemoved=c.isToBeRemoved}for(h=b;null!=h;h=e)e=h.next,h.isToBeRemoved&&(b=h.remove(b));return b};
cdt.isPointInsideOfBoundaries=function(b,e,d){for(var a=0;a<d.length;++a)if(cdt.isPointInsideOfBoundary(b,d[a]))return!1;for(a=0;a<e.length;++a)if(cdt.isPointInsideOfBoundary(b,e[a]))return!0;return!1};
cdt.isPointInsideOfBoundary=function(b,e){if(0==b.length)return flase;for(var d=0,a,g=0;g<e.length;g++){a=new cdt.LineSeg(e[g],e[(g+1)%e.length]);var f=a.start[1]-b[1],c=a.end[1]-b[1];1E-10>Math.abs(f)&&(f=0);1E-10>Math.abs(c)&&(c=0);0<f*c||1E-10>Math.abs(a.start[1]-a.end[1])||(f=a.crossXpos(b[1]),f<b[0]||1E-10>Math.abs(f-a.end[0])&&1E-10>Math.abs(b[1]-a.end[1])||1E-10>Math.abs(f-a.start[0])&&1E-10>Math.abs(b[1]-a.start[1])&&0<=(a.end[1]-a.start[1])*((0==g?e[e.length-1][1]:e[g-1][1])-a.start[1])||
++d)}return 1==d%2};cdt.getUpperAndLowerVtx=function(b,e,d){var a=[],g=[];if(null!=e){for(var f=cdt.sub(b[e[0]],b[e[1]]),c,h=0;h<d.length;++h)c=cdt.sub(b[d[h]],b[e[1]]),0<f[0]*c[1]-f[1]*c[0]?a.push(d[h]):0>f[0]*c[1]-f[1]*c[0]&&g.push(d[h]);a.push(e[0]);a.push(e[1]);g.push(e[0]);g.push(e[1])}return{upperVtx:a,lowerVtx:g}};
cdt.getCrossTriConstraint=function(b,e,d){e=cdt.makePointToTri(b,e);for(var a=null,g=[],f=!1,c=0;c<d.length;++c){for(var h=0;h<d[c].length-1;++h)if(g=cdt.isEdgeCross(b,e,d[c],h),0<g.length){a=[d[c][h+1],d[c][h]];f=!0;break}if(f)break}return{crossTri:g,crossEdge:a}};cdt.extractVerticesFromTri=function(b){for(var e=[],d=0;d<b.length;++d)for(var a=0;3>a;++a)e.push(b[d].vertexID[a]);e=e.filter(function(a,b,c){return c.indexOf(a)===b});e.sort(function(a,b){return a<b?-1:a>b?1:0});return e};
cdt.removeSuperTriangle=function(b,e){for(var d,a=b;null!=a;){d=!1;for(var g=0;3>g;++g)for(var f=0;3>f;++f)if(a.vertexID[g]==e.length-1-f){d=!0;break}d?a===b?a=b=a.remove(b):(d=a.next,a.remove(b),a=d):a=a.next}e.splice(e.length-3,3);return b};
cdt.isEdgeCross=function(b,e,d,a){for(var g=[b[d[a]],b[d[a+1]]],f,c=null,h=0;h<e[d[a]].length&&(f=e[d[a]][h],c=cdt.isTriAndEdgeCross(b,f,g),null==c);++h);if(null==c)return[];for(e=[f];;){h=f.edgeIDinAdjacent[c];f=f.adjacent[c];if(null==f){console.log("ERROR at isEdgeCross");break}e.push(f);if(f.vertexID[(h+2)%3]==d[a+1])break;c=cdt.isTriAndEdgeCross(b,f,g,h)}return e};
cdt.isTriAndEdgeCross=function(b,e,d,a){for(var g=[[0,0],[0,0],[0,0]],f=0;3>f;++f)g[f]=b[e.vertexID[f]];for(f=0;3>f;++f)if(cdt.isIntersect(d,[g[f],g[(f+1)%3]])&&f!=a)return f;return null};cdt.makePointToTri=function(b,e){for(var d=Array(b.length),a=0;a<d.length;++a)d[a]=[];for(a=e;null!=a;a=a.next)d[a.vertexID[0]].push(a),d[a.vertexID[1]].push(a),d[a.vertexID[2]].push(a);return d};
cdt.isIntersect=function(b,e){var d=cdt.sub(e[0],b[0]),a=cdt.sub(b[1],b[0]),g=cdt.sub(e[1],e[0]),f=a[0]*g[1]-a[1]*g[0];if(0==f)return!1;g=(d[0]*g[1]-d[1]*g[0])/f;d=(d[0]*a[1]-d[1]*a[0])/f;return 0>=g-1E-5||1<=g+1E-5||0>=d-1E-5||1<=d+1E-5?!1:!0};
cdt.addSuperTriangleToPoints=function(b){if(0==b.length)return[[0,0],[0,0],[0,0]];for(var e=b[0][1],d=b[0][1],a=b[0][0],g=b[0][0],f=1;f<b.length;++f)g>b[f][0]&&(g=b[f][0]),a<b[f][0]&&(a=b[f][0]),e>b[f][1]&&(e=b[f][1]),d<b[f][1]&&(d=b[f][1]);var f=.5*(a-g)+g,c=.5*(d-e)+e,e=4*(a-g>d-e?a-g:d-e),d=Array(3);d[0]=[f-.5*e,c-1.732/6*e];d[1]=[f+.5*e,c-1.732/6*e];d[2]=[f,c+1.732/3*e];b.push(d[0]);b.push(d[1]);b.push(d[2])};
cdt.DelaunayTriangle=function(b,e){this.adjacent;this.edgeIDinAdjacent;this.vertexID;this.prev;this.next;this.init(b,e);this.isRemoved;this.isToBeRemoved};
cdt.DelaunayTriangle.prototype.init=function(b,e){this.adjacent=[null,null,null];this.edgeIDinAdjacent=[-1,-1,-1];this.vertexID=cdt.clone(e);this.next=this.prev=null;var d=cdt.sub(b[this.vertexID[1]],b[this.vertexID[0]]),a=cdt.sub(b[this.vertexID[2]],b[this.vertexID[0]]);0>d[0]*a[1]-d[1]*a[0]&&(d=this.vertexID[1],this.vertexID[1]=this.vertexID[2],this.vertexID[2]=d);this.isRemoved=!1};
cdt.DelaunayTriangle.prototype.cloneProperties=function(){return{adjacent:this.adjacent,edgeIDinAdjacent:cdt.clone(this.edgeIDinAdjacent),vertexID:cdt.clone(this.vertexID),prev:this.prev,next:this.next}};
cdt.DelaunayTriangle.prototype.remove=function(b){if(this.isRemoved)return null;for(var e=0;3>e;++e)null!=this.adjacent[e]&&(this.adjacent[e].adjacent[this.edgeIDinAdjacent[e]]=null);this.edgeIDinAdjacent=[];this.adjacent=null;null!=this.next&&(this.next.prev=this.prev);null!=this.prev&&(this.prev.next=this.next);this.prev=null;this===b&&(b=this.next);this.next=null;this.isRemoved=!0;return b};
cdt.DelaunayTriangle.prototype.addPoint=function(b,e,d){for(var a=this.cloneProperties(),g,f=Array(3),c=0;3>c;++c)g=[b,a.vertexID[c],a.vertexID[(c+1)%3]],0==c?(f[c]=this,f[c].init(e,g)):f[c]=new cdt.DelaunayTriangle(e,g);null!=a.prev&&(a.prev.next=f[0]);f[0].next=f[1];f[1].next=f[2];f[2].next=a.next;null!=a.next&&(a.next.prev=f[2]);f[2].prev=f[1];f[1].prev=f[0];f[0].prev=a.prev;for(c=0;3>c;++c)f[c].adjacent[0]=f[(c+2)%3],f[c].adjacent[1]=a.adjacent[c],f[c].adjacent[2]=f[(c+1)%3],null!=a.adjacent[c]&&
(a.adjacent[c].adjacent[a.edgeIDinAdjacent[c]]=f[c]),f[c].edgeIDinAdjacent[0]=2,f[c].edgeIDinAdjacent[1]=a.edgeIDinAdjacent[c],f[c].edgeIDinAdjacent[2]=0,null!=a.adjacent[c]&&(a.adjacent[c].edgeIDinAdjacent[a.edgeIDinAdjacent[c]]=1);a=[];a.push(f[0]);a.push(f[1]);a.push(f[2]);f=e.length;for(g=0;0!=a.length;){if(g>f){console.log("Error at cdt.DelaunayTriangle.addPoint. Over num_max_swap_itr");break}cdt.DelaunayTriangle.swapping(a,b,e,d);++g}};
cdt.DelaunayTriangle.swapping=function(b,e,d,a){for(var g=b.pop(),f,c,h,k,l,m=0;3>m;++m)if(g.vertexID[m]==e){f=m;c=(f+1)%3;break}h=g.adjacent[c];if(null!=h){k=g.edgeIDinAdjacent[c];l=(k+2)%3;if(void 0==a||null==a)a=[];var n,p,q,t;n=g.vertexID[c];p=g.vertexID[(c+1)%3];for(m=0;m<a.length;++m)for(var r=0;r<a[m].length-1;++r)if(q=a[m][r],t=a[m][r+1],n==q&&p==t||n==t&&p==q)return;a=new cdt.DelaunayTriangle.Circumcircle(d[h.vertexID[0]],d[h.vertexID[1]],d[h.vertexID[2]]);cdt.norm2(cdt.sub(a.p,d[e]))<a.rad&&
(g.vertexID[(f+2)%3]=h.vertexID[l],h.vertexID[(l+2)%3]=g.vertexID[f],g.adjacent[c]=h.adjacent[(k+1)%3],h.adjacent[k]=g.adjacent[(c+1)%3],g.adjacent[(c+1)%3]=h,h.adjacent[(k+1)%3]=g,null!=g.adjacent[c]&&(g.adjacent[c].adjacent[h.edgeIDinAdjacent[(k+1)%3]]=g),null!=h.adjacent[k]&&(h.adjacent[k].adjacent[g.edgeIDinAdjacent[(c+1)%3]]=h),g.edgeIDinAdjacent[c]=h.edgeIDinAdjacent[(k+1)%3],h.edgeIDinAdjacent[k]=g.edgeIDinAdjacent[(c+1)%3],g.edgeIDinAdjacent[(c+1)%3]=(k+1)%3,h.edgeIDinAdjacent[(k+1)%3]=(c+
1)%3,null!=g.adjacent[c]&&(g.adjacent[c].edgeIDinAdjacent[g.edgeIDinAdjacent[c]]=c),null!=h.adjacent[k]&&(h.adjacent[k].edgeIDinAdjacent[h.edgeIDinAdjacent[k]]=k),b.push(g),b.push(h))}};
cdt.DelaunayTriangle.lawsonTriangleDetection=function(b,e,d){function a(a,d){for(var e=a;null!=e;e=e.next){for(var f=!0,g=0;3>g;++g)if(h=cdt.sub(d,b[e.vertexID[g]]),c=cdt.sub(b[e.vertexID[(g+1)%3]],b[e.vertexID[g]]),0<h[0]*c[1]-h[1]*c[0]){f=!1;break}if(f)return e}console.log("Error at allPossibleTriangleDetection. No triangle including the point found.");return e}if(null==e)return null;var g=e,f=0,c,h,k=!1,l=2*b.length,m=0;for(a(e,d);;){if(m>l)return console.log("Error at cdt.DelaunayTriangle.lawsonTriangleDetection: Over max_itr count:"+
m+"/max:"+l),a(e,d);for(var k=!0,n=0;3>n;++n){h=cdt.sub(d,b[g.vertexID[f]]);c=cdt.sub(b[g.vertexID[(f+1)%3]],b[g.vertexID[f]]);if(0<h[0]*c[1]-h[1]*c[0]){k=g.edgeIDinAdjacent[f];g=g.adjacent[f];f=(k+1)%3;k=!1;if(null==g)return null;break}f=(f+1)%3}if(k)return g;++m}};
cdt.DelaunayTriangle.Circumcircle=function(b,e,d){var a=cdt.norm2(cdt.sub(e,d)),g=cdt.norm2(cdt.sub(d,b)),f=cdt.norm2(cdt.sub(b,e)),c=.5*(a+g+f);this.S=Math.sqrt(c*(c-a)*(c-g)*(c-f));this.rad=a*g*f/(4*this.S);b=cdt.mul(a*a*(g*g+f*f-a*a),b);e=cdt.mul(g*g*(f*f+a*a-g*g),e);d=cdt.mul(f*f*(a*a+g*g-f*f),d);this.p=cdt.div(cdt.add(cdt.add(b,e),d),16*this.S*this.S)};
cdt.clone=function(b){if(0==b.length)return[];var e=Array(b.length);if("number"==typeof b[0]){for(var d=0;d<b.length;++d)e[d]=b[d];return e}if(typeof("number"==b[0][0])){for(d=0;d<b.length;++d){e[d]=Array(b[d].length);for(var a=0;a<b[d].length;++a)e[d]=b[d]}return e}if(typeof("number"==b[0][0][0]))for(alert("\u3053\u306e\u51e6\u7406\u306f\u672a\u691c\u8a3c at cdt.clone"),d=0;d<b.length;++d)for(e[d]=Array(b[d].length),a=0;a<b[d].length;++a){e[d][a]=Array(b[d][a].length);for(var g=0;g<b[d][a].length;++g)e[d][a][g]=
b[d][a][g]}};cdt.norm2=function(b){for(var e=0,d=0;d<b.length;++d)e+=b[d]*b[d];return Math.sqrt(e)};cdt.sub=function(b,e){if(b.length!=e.length)return console.log("length of input arrays are not equal. in cdt.sub"),null;for(var d=b.length,a=Array(d),g=0;g<d;++g)a[g]=b[g]-e[g];return a};cdt.add=function(b,e){if(b.length!=e.length)return console.log("ERROR: length of input arrays are not equal. in cdt.sub"),null;for(var d=b.length,a=Array(d),g=0;g<d;++g)a[g]=b[g]+e[g];return a};
cdt.mul=function(b,e){var d,a;if("number"==typeof b)d=b,a=e;else if("number"==typeof e)d=e,a=b;else return console.log("ERROR: input argument do not include scalar value"),null;for(var g=a.length,f=Array(g),c=0;c<g;++c)f[c]=d*a[c];return f};cdt.div=function(b,e){var d,a;if("number"==typeof b)d=b,a=e;else if("number"==typeof e)d=e,a=b;else return console.log("ERROR: input arguments do not include scalar value"),null;var g=a.length,f=Array(g);d=1/d;for(var c=0;c<g;++c)f[c]=a[c]*d;return f};
cdt.LineSeg=function(b,e){this.start=cdt.clone(b);this.end=cdt.clone(e);this.a=this.end[1]-this.start[1];this.b=this.start[0]-this.end[0];this.c=(this.end[0]-this.start[0])*this.start[1]-(this.end[1]-this.start[1])*this.start[0];this.vec=cdt.sub(this.end,this.start);this.len=cdt.norm2(this.vec)};
cdt.LineSeg.prototype.intersect=function(b){var e=!1,d=((b.start[0]-b.end[0])*(this.start[1]-b.start[1])+(b.start[1]-b.end[1])*(b.start[0]-this.start[0]))*((b.start[0]-b.end[0])*(this.end[1]-b.start[1])+(b.start[1]-b.end[1])*(b.start[0]-this.end[0]));0>=((this.start[0]-this.end[0])*(b.start[1]-this.start[1])+(this.start[1]-this.end[1])*(this.start[0]-b.start[0]))*((this.start[0]-this.end[0])*(b.end[1]-this.start[1])+(this.start[1]-this.end[1])*(this.start[0]-b.end[0]))&&0>=d&&(this.start[1]-this.end[1])/
(this.start[0]-this.end[0])!=(b.start[1]-b.end[1])/(b.start[0]-b.end[0])&&(e=!0);return e};cdt.LineSeg.prototype.crossPos=function(b){var e=Array(2);e[0]=(this.b*b.c-b.b*this.c)/(this.a*b.b-b.a*this.b);e[1]=(b.a*this.c-this.a*b.c)/(this.a*b.b-b.a*this.b);return e};cdt.LineSeg.prototype.crossXpos=function(b){return(-this.b*b-this.c)/this.a};cdt.LineSeg.prototype.crossYpos=function(b){return(-this.a*b-this.c)/this.b};
